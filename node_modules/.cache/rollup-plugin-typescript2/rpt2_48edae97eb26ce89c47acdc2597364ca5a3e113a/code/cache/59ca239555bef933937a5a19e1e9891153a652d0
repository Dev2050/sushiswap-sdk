{"code":"import { ONE, SolidityType, THREE, TWO, ZERO } from '../constants';\r\nimport JSBI from 'jsbi';\r\nimport { validateSolidityTypeInstance } from './validateSolidityTypeInstance';\r\n// mock the on-chain sqrt function\r\nexport function sqrt(y) {\r\n    validateSolidityTypeInstance(y, SolidityType.uint256);\r\n    let z = ZERO;\r\n    let x;\r\n    if (JSBI.greaterThan(y, THREE)) {\r\n        z = y;\r\n        x = JSBI.add(JSBI.divide(y, TWO), ONE);\r\n        while (JSBI.lessThan(x, z)) {\r\n            z = x;\r\n            x = JSBI.divide(JSBI.add(JSBI.divide(y, x), x), TWO);\r\n        }\r\n    }\r\n    else if (JSBI.notEqual(y, ZERO)) {\r\n        z = ONE;\r\n    }\r\n    return z;\r\n}\r\n//# sourceMappingURL=sqrt.js.map","references":["/Users/fisseha/sushiswap-git/sushiswap-sdk/src/constants/index.ts","/Users/fisseha/sushiswap-git/sushiswap-sdk/node_modules/jsbi/jsbi.d.ts","/Users/fisseha/sushiswap-git/sushiswap-sdk/src/functions/validateSolidityTypeInstance.ts"],"map":"{\"version\":3,\"file\":\"sqrt.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/functions/sqrt.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,cAAc,CAAA;AAElE,OAAO,IAAI,MAAM,MAAM,CAAA;AACvB,OAAO,EAAE,4BAA4B,EAAE,MAAM,gCAAgC,CAAA;AAE7E,kCAAkC;AAClC,MAAM,UAAU,IAAI,CAAC,CAAO;IAC1B,4BAA4B,CAAC,CAAC,EAAE,YAAY,CAAC,OAAO,CAAC,CAAA;IACrD,IAAI,CAAC,GAAS,IAAI,CAAA;IAClB,IAAI,CAAO,CAAA;IACX,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;QAC9B,CAAC,GAAG,CAAC,CAAA;QACL,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;QACtC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC1B,CAAC,GAAG,CAAC,CAAA;YACL,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;SACrD;KACF;SAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;QACjC,CAAC,GAAG,GAAG,CAAA;KACR;IACD,OAAO,CAAC,CAAA;AACV,CAAC\"}"}
